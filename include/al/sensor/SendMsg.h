#pragma once

#include "sead/math/seadVector.h"

#include "HitSensor.h"
#include "SensorMsg.h"

namespace al
{

    struct ComboCounter;

    bool sendMsgPlayerAttackTrample(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerTrampleReflect(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerReflectOrTrample(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerHipDrop(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerObjHipDrop(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerObjHipDropReflect(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerObjHipDropHighJump(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerHipDropKnockDown(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerStatueDrop(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerObjStatueDrop(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerObjStatueDropReflect(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerObjStatueDropReflectNoCondition(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerStatueTouch(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerUpperPunch(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerObjUpperPunch(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerRollingAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerRollingReflect(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerObjRollingAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerObjRollingAttackFailure(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerInvincibleAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerFireBallAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerRouteDokanFireBallAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerTailAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerTouch(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerKick(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerCatch(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerSlidingAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerBoomerangAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerBoomerangAttackCollide(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerBoomerangReflect(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerBoomerangBreak(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerBodyAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerBodyLanding(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerBodyAttackReflect(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerClimbAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerSpinAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerGiantAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerCooperationHipDrop(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerClimbSlidingAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerClimbRollingAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerGiantHipDrop(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPlayerDisregard(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerItemGet(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerPutOnEquipment(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerReleaseEquipment(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerReleaseEquipmentGoal(al::HitSensor *, al::HitSensor *, uint);
    bool sendMsgPlayerFloorTouch(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerDamageTouch(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerCarryFront(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerCarryFrontWallKeep(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerCarryUp(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerCarryKeepDemo(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerCarryWarp(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerLeave(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerRelease(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerReleaseBySwing(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerReleaseDamage(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerReleaseDead(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerReleaseDemo(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerToss(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerInvincibleTouch(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgEnemyAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgEnemyAttackBoomerang(al::HitSensor *, al::HitSensor *);
    bool sendMsgEnemyAttackFire(al::HitSensor *, al::HitSensor *, char const *);
    bool sendMsgEnemyAttackNeedle(al::HitSensor *, al::HitSensor *);
    bool sendMsgEnemyFloorTouch(al::HitSensor *, al::HitSensor *);
    bool sendMsgEnemyItemGet(al::HitSensor *, al::HitSensor *);
    bool sendMsgEnemyRouteDokanAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgEnemyRouteDokanFire(al::HitSensor *, al::HitSensor *);
    bool sendMsgEnemyTouch(al::HitSensor *, al::HitSensor *);
    bool sendMsgEnemyUpperPunch(al::HitSensor *, al::HitSensor *);
    bool sendMsgEnemyTrample(al::HitSensor *, al::HitSensor *);
    bool sendMsgMapObjTrample(al::HitSensor *, al::HitSensor *);
    bool sendMsgPressureDeath(al::HitSensor *, al::HitSensor *);
    bool sendMsgNpcTouch(al::HitSensor *, al::HitSensor *);
    bool sendMsgExplosion(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgExplosionCollide(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgPush(al::HitSensor *, al::HitSensor *);
    bool sendMsgPushStrong(al::HitSensor *, al::HitSensor *);
    bool sendMsgPushVeryStrong(al::HitSensor *, al::HitSensor *);
    bool sendMsgHit(al::HitSensor *, al::HitSensor *);
    bool sendMsgHitStrong(al::HitSensor *, al::HitSensor *);
    bool sendMsgHitVeryStrong(al::HitSensor *, al::HitSensor *);
    bool sendMsgKnockDown(al::HitSensor *, al::HitSensor *);
    bool sendMsgMapPush(al::HitSensor *, al::HitSensor *);
    bool sendMsgVanish(al::HitSensor *, al::HitSensor *);
    bool sendMsgChangeAlpha(al::LiveActor *, float);
    bool sendMsgShowModel(al::HitSensor *, al::HitSensor *);
    bool sendMsgHideModel(al::HitSensor *, al::HitSensor *);
    bool sendMsgRestart(al::HitSensor *, al::HitSensor *);
    bool sendMsgNeedleBallAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgPunpunFloorTouch(al::HitSensor *, al::HitSensor *);
    bool sendMsgInvalidateFootPrint(al::HitSensor *, al::HitSensor *);
    bool sendMsgKickKouraAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgKickKouraAttackCollide(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgKickKouraGetItem(al::HitSensor *, al::HitSensor *);
    bool sendMsgKickKouraReflect(al::HitSensor *, al::HitSensor *);
    bool sendMsgKickKouraCollideNoReflect(al::HitSensor *, al::HitSensor *);
    bool sendMsgKickKouraBreak(al::HitSensor *, al::HitSensor *);
    bool sendMsgKickKouraBlow(al::HitSensor *, al::HitSensor *);
    bool sendMsgKickStoneAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgKickStoneAttackCollide(al::HitSensor *, al::HitSensor *);
    bool sendMsgKickStoneAttackHold(al::HitSensor *, al::HitSensor *);
    bool sendMsgKickStoneAttackReflect(al::HitSensor *, al::HitSensor *);
    bool sendMsgKickStoneTrample(al::HitSensor *, al::HitSensor *);
    bool sendMsgKillerAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgLiftGeyser(al::HitSensor *, al::HitSensor *);
    bool sendMsgWarpStart(al::HitSensor *, al::HitSensor *);
    bool sendMsgWarpEnd(al::HitSensor *, al::HitSensor *);
    bool sendMsgHoldCancel(al::HitSensor *, al::HitSensor *);
    bool sendMsgHoleIn(al::HitSensor *, al::HitSensor *);
    bool sendMsgJumpInhibit(al::HitSensor *, al::HitSensor *);
    bool sendMsgGoalKill(al::HitSensor *, al::HitSensor *);
    bool sendMsgGoal(al::HitSensor *, al::HitSensor *);
    bool sendMsgBindStart(al::HitSensor *, al::HitSensor *);
    bool sendMsgBindInit(al::HitSensor *, al::HitSensor *, uint);
    bool sendMsgBindEnd(al::HitSensor *, al::HitSensor *);
    bool sendMsgBindCancel(al::HitSensor *, al::HitSensor *);
    bool sendMsgBindCancelByDemo(al::HitSensor *, al::HitSensor *);
    bool sendMsgBindDamage(al::HitSensor *, al::HitSensor *);
    bool sendMsgBindSteal(al::HitSensor *, al::HitSensor *);
    bool sendMsgBindGiant(al::HitSensor *, al::HitSensor *);
    bool sendMsgBallAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgBallRouteDokanAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgBallAttackHold(al::HitSensor *, al::HitSensor *);
    bool sendMsgBallAttackDRCHold(al::HitSensor *, al::HitSensor *);
    bool sendMsgBallAttackCollide(al::HitSensor *, al::HitSensor *);
    bool sendMsgBallTrample(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgBallTrampleCollide(al::HitSensor *, al::HitSensor *);
    bool sendMsgBallItemGet(al::HitSensor *, al::HitSensor *);
    bool sendMsgFireBalCollide(al::HitSensor *, al::HitSensor *);
    bool sendMsgFireBallFloorTouch(al::HitSensor *, al::HitSensor *);
    bool sendMsgDokanBazookaAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgRideAllPlayerItemGet(al::HitSensor *, al::HitSensor *);
    bool sendMsgHideModel(al::LiveActor *);
    bool sendMsgShowModel(al::LiveActor *);
    bool sendMsgRestart(al::LiveActor *);
    bool sendMsgCollisionImpulse(al::HitSensor *, al::HitSensor *, sead::Vector3f *, sead::Vector3f const &, float, sead::Vector3f const &, float);
    bool sendMsgSwitchOn(al::LiveActor *);
    bool sendMsgSwitchOnInit(al::LiveActor *);
    bool sendMsgSwitchOffInit(al::LiveActor *);
    bool sendMsgSwitchKillOn(al::LiveActor *);
    bool sendMsgSwitchKillOnInit(al::LiveActor *);
    bool sendMsgSwitchKillOffInit(al::LiveActor *);
    bool sendMsgPlayerFloorTouchToColliderGround(al::LiveActor *, al::HitSensor *);
    bool sendMsgPlayerUpperPunchToColliderCeiling(al::LiveActor *, al::HitSensor *);
    bool sendMsgEnemyFloorTouchToColliderGround(al::LiveActor *, al::HitSensor *);
    bool sendMsgEnemyUpperPunchToColliderCeiling(al::LiveActor *, al::HitSensor *);
    bool sendMsgAskSafetyPoint(al::HitSensor *, al::HitSensor *, sead::Vector3f **);
    bool sendMsgAskSafetyPointToColliderGround(al::LiveActor *, al::HitSensor *, sead::Vector3f **);
    bool sendMsgTouchAssist(al::HitSensor *, al::HitSensor *);
    bool sendMsgTouchAssistTrig(al::HitSensor *, al::HitSensor *);
    bool sendMsgTouchStroke(al::HitSensor *, al::HitSensor *);
    bool sendMsgScreenPointInvalidCollisionParts(al::HitSensor *, al::HitSensor *);
    bool sendMsgBlockUpperPunch(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgBlockLowerPunch(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgBlockItemGet(al::HitSensor *, al::HitSensor *);
    bool sendMsgKillerItemGet(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerKouraAttack(al::HitSensor *, al::HitSensor *, al::ComboCounter *);
    bool sendMsgLightFlash(al::HitSensor *, al::HitSensor *);
    bool sendMsgForceAbyss(al::HitSensor *, al::HitSensor *);
    bool sendMsgIsNerveSupportFreeze(al::HitSensor *, al::HitSensor *);
    bool sendMsgOnSyncSupportFreeze(al::HitSensor *, al::HitSensor *);
    bool sendMsgOffSyncSupportFreeze(al::HitSensor *, al::HitSensor *);
    bool sendMsgSwordAttackHighLeft(al::HitSensor *, al::HitSensor *);
    bool sendMsgSwordAttackLowLeft(al::HitSensor *, al::HitSensor *);
    bool sendMsgSwordAttackHighRight(al::HitSensor *, al::HitSensor *);
    bool sendMsgSwordAttackLowRight(al::HitSensor *, al::HitSensor *);
    bool sendMsgSwordAttackJumpUnder(al::HitSensor *, al::HitSensor *);
    bool sendMsgSwordBeamAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgSwordBeamReflectAttack(al::HitSensor *, al::HitSensor *);
    bool sendMsgShieldGuard(al::HitSensor *, al::HitSensor *);
    bool sendMsgEnemyAttackKnockDown(al::HitSensor *, al::HitSensor *);
    bool sendMsgAskMultiPlayerEnemy(al::HitSensor *, al::HitSensor *);
    bool sendMsgItemGettable(al::HitSensor *, al::HitSensor *);
    bool sendMsgKikkiThrow(al::HitSensor *, al::HitSensor *);
    bool sendMsgIsKikkiThrowTarget(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerCloudGet(al::HitSensor *, al::HitSensor *);
    bool sendMsgAutoJump(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerTouchShadow(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerPullOutShadow(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerAttackShadow(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerAttackShadowStrong(al::HitSensor *, al::HitSensor *);
    bool sendMsgPlayerAttackChangePos(al::HitSensor *, al::HitSensor *, sead::Vector3f *);
    bool sendMsgAtmosOnlineLight(al::HitSensor *, al::HitSensor *);
    bool sendMsgLightBurn(al::HitSensor *, al::HitSensor *);
    bool sendMsgMoonLightBurn(al::HitSensor *, al::HitSensor *);
    bool sendMsgString(al::HitSensor *, al::HitSensor *, char const *);
    bool sendMsgStringV4fPtr(al::HitSensor *, al::HitSensor *, char const *, sead::Vector4f *);
    bool sendMsgStringV4fSensorPtr(al::HitSensor *, al::HitSensor *, char const *, sead::Vector4f *);
    bool sendMsgStringVoidPtr(al::HitSensor *, al::HitSensor *, char const *, void *);
    bool sendMsgEnemyAttackForCrossoverSensor(al::HitSensor *, al::HitSensor *);
    bool sendMsgEnemyAttackForCrossoverCylinderSensor(al::HitSensor *, al::HitSensor *, sead::Vector3f const &, sead::Vector3f const &, float);
    bool sendMsgPushAndKillVelocityToTarget(al::LiveActor *, al::HitSensor *, al::HitSensor *);
    bool sendMsgPushAndKillVelocityToTargetH(al::LiveActor *, al::HitSensor *, al::HitSensor *);
    bool sendMsgCollidePush(al::HitSensor *, al::HitSensor *, sead::Vector3f const &);
    bool sendMsgScreenPointTarget(al::SensorMsg const &, al::ScreenPointer *, al::ScreenPointTarget *);
} // namespace al
